{"version":3,"sources":["Component/About.js","Component/Alert.js","Component/Navbar.js","Component/TextBox.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","_useState2","_slicedToArray","Mode","setMode","_useState3","color","backgroundColor","_useState4","cssStyle","setCssStyle","React","createElement","Fragment","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","Alert","props","alert","role","msg","Navbar","concat","mode","Link","to","title","aria-label","aria-current","toggleMode","htmlFor","TextFile","text","setText","heading","value","onChange","event","target","rows","n","toUpperCase","toLowerCase","newText","split","join","length","protoTypes","PropTypes","string","defaultProps","App","setAlert","alertSet","message","setTimeout","Router","document","body","Routes","Route","path","element","TextBox","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b2eb0407.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [Mode, setMode] = useState(\"Enable Dark Mode\");\r\n    const [cssStyle, setCssStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    });\r\n\r\n    const handleMode = ()=>{\r\n        if(Mode === \"Enable Dark Mode\"){\r\n            setMode(\"Enable Light Mode\");\r\n            setCssStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n        }else{\r\n            setMode(\"Enable Dark Mode\");\r\n            setCssStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n        }   \r\n    }\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className='container my-3' style={cssStyle} >\r\n    <h1>About Us</h1>\r\n        <div className=\"accordion \" id=\"accordionExample\">\r\n    <div className=\"accordion-item\" style={cssStyle}>\r\n        <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button\" type=\"button\" style={cssStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        What is TextUtils?\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>Apart from counting words and characters, </strong> our online editor can help you in removing extra spaces, capitalize, lowercase the sentense and clear text. You can enable or disable the Dark Mode. Apart from that You would be able to see the number of characters and words increasing or decreasing as you type, delete, and edit them. You can also copy and paste text from another program into the online editor.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\" style={cssStyle}>\r\n        <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button collapsed\" style={cssStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Made by\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            <strong>Nitin Sharma.</strong> Software Engineer\r\n        </div>\r\n        </div>\r\n    </div>\r\n   \r\n    </div>\r\n    <button className='btn btn-primary my-3' onClick={handleMode}>{Mode}</button>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className=\"alert alert-success\"  role=\"alert\">\r\n        <p><strong>{props.alert.type}</strong>: {props.alert.msg}</p>\r\n    </div>  \r\n\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <>\r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className={\"nav-item\"}>\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-secondary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode===\"dark\"?\"light\":\"dark\"}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n</>\r\n  )\r\n}\r\n\r\n\r\nNavbar.protoTypes = {\r\n  title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n  title: \"set title here\"\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextFile(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = ()=>{\r\n    let n = text.toUpperCase();\r\n    setText(n);\r\n    props.alert(\"Text has been capitalized\",\"Success\")\r\n  }\r\n\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.alert(\"Extra spaces has been removed\",\"Success\")\r\n  }\r\n\r\n  const handlelowClick = ()=>{\r\n    let n = text.toLowerCase();\r\n    setText(n);\r\n    props.alert(\"Text converted to lower case\",\"Success\")\r\n  }\r\n\r\n  const handleClearClick = ()=>{\r\n    setText(\"\");\r\n    props.alert(\"Text has been cleared\",\"Success\")\r\n  }\r\n\r\n\r\n  const handleOnChange = (event)=>{\r\n    setText(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n    <div>\r\n      <h1 className={`text-${props.mode===\"dark\"?\"light\":\"dark\"}`}>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style ={{backgroundColor: props.mode===\"dark\"?\"grey\":\"white\", color:props.mode===\"dark\"?\"white\":\"black\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handlelowClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className='container my-3 '>\r\n      <p className={`text-${props.mode===\"dark\"?\"light\":\"dark\"}`}>{ text.length===0?0:text.split(\" \").length} words and {text.length} characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import About from \"./Component/About\";\nimport Alert from \"./Component/Alert\";\nimport Navbar from \"./Component/Navbar\";\nimport TextBox from \"./Component/TextBox\";\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState(`light`);\n  const [alert,setAlert] = useState(null);\n\n  const alertSet = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  const toggleMode = ()=>{\n      if(mode===`dark`){\n        setMode(`light`);\n        document.body.style.backgroundColor = \"white\";\n        alertSet(\"Light mode has been enabled\",\"Success\")\n\n      }else{\n        setMode(`dark`);\n        document.body.style.backgroundColor = \"#042743\";\n        alertSet(\"Dark mode has been enabled\",\"Success\")\n      }\n  }\n  return (\n   <>\n   <Router>\n   <Navbar title = \"TextUtils\" mode={mode} toggleMode={toggleMode} alertSet={alertSet}/>\n    <Alert alert={alert}/>\n   <div className=\"container my-3\">\n   <Routes>\n   <Route path=\"/about\" element={<About />} />\n   <Route path=\"/\" element={<TextBox heading=\"Enter the text to analyze below\" mode={mode} alert={alertSet}/>} />\n      {/* <Route path=\"/\">\n        <TextBox heading=\"Enter your text to analysis\" mode={mode} alert={alertSet}/>\n      </Route> */}\n    </Routes>\n   </div>\n   </Router>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}